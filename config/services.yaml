imports:
    - { resource: 'database-configuration.php' }

# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env(mosparo_name): 'mosparo'
    env(mosparo_installed): ~
    env(mosparo_installed_version): ~
    env(mosparo_assets_version): '' # A random string for cache busting without revealing the real version

    env(default_locale): 'en'
    env(default_date_format): 'Y-m-d'
    env(default_time_format): 'H:i:s'
    env(default_timezone): 'UTC'

    env(default_color_mode): 'light'

    env(database_system): 'mysql'
    env(database_driver): 'pdo_mysql'
    env(database_host): '127.0.0.1'
    env(database_port): '3306'
    env(database_name): 'mosparo'
    env(database_user): 'root'
    env(database_password): ~
    env(database_version): '1.0'
    env(database_path): '%kernel.project_dir%/var/data/data.sqlite'

    env(mailer_transport): 'sendmail'
    env(mailer_host): '127.0.0.1'
    env(mailer_user): ~
    env(mailer_password): ~
    env(mailer_port): ~
    env(mailer_from_address): 'mosparo@example.com'
    env(mailer_from_name): 'mosparo'
    env(mailer_dsn): 'sendmail://default'

    env(secret): 'SecretMosparoToken'

    env(trusted_proxies): '127.0.0.1'
    default_trusted_proxies: '%env(trusted_proxies)%'

    env(login_throttling_ui_limit): '5'
    env(login_throttling_ip_limit): '25'
    env(login_throttling_interval): '5 minutes'

    env(backend_access_ip_allow_list): ~
    env(api_access_ip_allow_list): ~
    env(web_cron_job_access_ip_allow_list): ~

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        Mosparo\Controller\ProjectRelated\ProjectRelatedInterface:
            calls:
                - [ setProjectHelper ]

        Mosparo\Rule\Type\RuleTypeInterface:
            tags: ['mosparo.ruleType']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Mosparo\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Mosparo\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    mosparo.cache.service:
        class: Symfony\Contracts\Cache\CacheInterface
        factory: [ 'Mosparo\Factory\CacheFactory', 'getCache' ]
        arguments:
            $cacheAdapter: '%env(MOSPARO_CACHE_ADAPTER)%'
            $redisUrl: '%env(REDIS_URL)%'
            $memcachedUrl: '%env(MEMCACHED_URL)%'
            $filesystemCachePath: '%env(FILESYSTEM_CACHE_PATH)%'

    Mosparo\Session\DatabaseSessionHandler:
        arguments:
            $connection: '@database_connection'
            $mosparoInstalled: '%env(mosparo_installed)%'
            $mosparoVersion: '%env(mosparo_installed_version)%'
            $options: { lock_mode: 0 }

    Mosparo\Subscriber\ApiSubscriber:
        class: Mosparo\Subscriber\ApiSubscriber
        tags:
            - { name: kernel.event_subscriber }

    Mosparo\Subscriber\AuthenticationSubscriber:
        class: Mosparo\Subscriber\AuthenticationSubscriber
        tags:
            - { name: kernel.event_subscriber }

    Mosparo\Subscriber\ProjectSubscriber:
        class: Mosparo\Subscriber\ProjectSubscriber
        arguments:
            $installed: '%env(mosparo_installed)%'
            $apiAccessIpAllowList: '%env(api_access_ip_allow_list)%'
        tags:
            - { name: kernel.event_subscriber }

    Mosparo\Subscriber\LocaleSubscriber:
        class: Mosparo\Subscriber\LocaleSubscriber
        tags:
            - { name: kernel.event_subscriber }

    Mosparo\Subscriber\InterfaceSubscriber:
        class: Mosparo\Subscriber\InterfaceSubscriber
        tags:
            - { name: kernel.event_subscriber }

    Mosparo\Subscriber\SetupSubscriber:
        class: Mosparo\Subscriber\SetupSubscriber
        arguments:
            $installed: '%env(mosparo_installed)%'
            $installedVersion: '%env(mosparo_installed_version)%'
            $debug: '%kernel.debug%'
        tags:
            - { name: kernel.event_subscriber }

    Mosparo\Twig\ProjectExtension:
        class: Mosparo\Twig\ProjectExtension
        tags:
            - { name: twig.extension }

    Mosparo\Twig\RuleTypeExtension:
        class: Mosparo\Twig\RuleTypeExtension
        tags:
            - { name: twig.extension }

    Mosparo\Twig\UpdateExtension:
        class: Mosparo\Twig\UpdateExtension
        arguments:
            $updatesEnabled: '%env(MOSPARO_UPDATES_ENABLED)%'
            $automaticUpdateCheckEnabled: '%env(MOSPARO_AUTOMATIC_UPDATE_CHECK_ENABLED)%'
        tags:
            - { name: twig.extension }

    Mosparo\Rule\RuleTypeManager:
        class: Mosparo\Rule\RuleTypeManager
        arguments: [ !tagged mosparo.ruleType ]

    Mosparo\Helper\GeoIp2Helper:
        class: Mosparo\Helper\GeoIp2Helper
        arguments:
            $downloadDirectory: '%kernel.project_dir%/var/data/geoip2'

    Mosparo\Helper\ImportHelper:
        class: Mosparo\Helper\ImportHelper
        arguments:
            $importDirectory: '%kernel.project_dir%/var/data/import'

    Mosparo\Helper\SetupHelper:
        arguments:
            $projectDirectory: '%kernel.project_dir%'

    Mosparo\Helper\ConfigHelper:
        arguments:
            $projectDirectory: '%kernel.project_dir%'
            $configFilePath: '%env(MOSPARO_CONFIG_FILE_PATH)%'
            $envSuffix: '%env(MOSPARO_ENV_SUFFIX)%'

    Mosparo\Helper\CleanupHelper:
        arguments:
            $cache: '@mosparo.cache.service'
            $cleanupGracePeriodEnabled: '%env(MOSPARO_CLEANUP_GRACE_PERIOD_ENABLED)%'

    Mosparo\Helper\LocaleHelper:
        arguments:
            $projectDirectory: '%kernel.project_dir%'
            $defaultDateFormat: '%env(default_date_format)%'
            $defaultTimeFormat: '%env(default_time_format)%'
            $defaultTimezone: '%env(default_timezone)%'

    Mosparo\Helper\InterfaceHelper:
        arguments:
            $defaultColorMode: '%env(default_color_mode)%'

    Mosparo\Helper\DesignHelper:
        arguments:
            $entrypointLookupCollection: '@webpack_encore.entrypoint_lookup_collection'
            $projectDirectory: '%kernel.project_dir%'
            $cache: '@mosparo.cache.service'
            $prepareCssFilesInSharedCache: '%env(MOSPARO_PREPARE_CSS_FILES_IN_SHARED_CACHE)%'

    Mosparo\Helper\MailHelper:
        arguments:
            $projectDirectory: '%kernel.project_dir%'

    Mosparo\Helper\Migration\V14OptimizeRulesHelper:
        arguments:
            $isDebug: '%kernel.debug%'

    Mosparo\Command\UpdateMosparoCommand:
        arguments:
            $projectDirectory: '%kernel.project_dir%'

    Mosparo\Helper\UpdateHelper:
        arguments:
            $projectDirectory: '%kernel.project_dir%'
            $cacheDirectory: '%kernel.cache_dir%'
            $env: '%kernel.environment%'

    Mosparo\Controller\Administration\UpdateController:
        arguments:
            $updatesEnabled: '%env(MOSPARO_UPDATES_ENABLED)%'

    Mosparo\Controller\Administration\SystemController:
        arguments:
            $projectDirectory: '%kernel.project_dir%'

    Mosparo\Controller\Administration\SecurityController:
        arguments:
            $trustedProxies: '%kernel.trusted_proxies%'

    Mosparo\Helper\HealthHelper:
        arguments:
            $bypassHealthcheck: '%env(bool:MOSPARO_BYPASS_HEALTH_CHECK)%'
            $mosparoInstalled: '%env(bool:mosparo_installed)%'
            $installedVersion: '%env(mosparo_installed_version)%'

    Mosparo\Controller\DynamicResourcesController:
        arguments:
            $cache: '@mosparo.cache.service'
            $prepareCssFilesInSharedCache: '%env(MOSPARO_PREPARE_CSS_FILES_IN_SHARED_CACHE)%'

    Mosparo\Helper\RuleCacheHelper:
        arguments:
            $cache: '@mosparo.cache.service'
            $useSharedCacheForRuleItems: '%env(bool:MOSPARO_USE_SHARED_CACHE_FOR_RULE_ITEMS)%'
            $ruleItemsCacheTtl: '%env(int:MOSPARO_RULE_ITEMS_CACHE_TTL)%'

    Mosparo\ExpressionLanguage\AllowListExpressionLanguageProvider:
        tags:
            - { name: security.expression_language_provider }
            - { name: routing.expression_language_provider }
