{% extends 'project_related/project_related_base.html.twig' %}

{% trans_default_domain 'mosparo' %}

{% block documentTitle %}{{ 'submission.title'|trans }} - {{ parent() }}{% endblock %}
{% block pageTitle %}{{ 'submission.title'|trans }}{% endblock %}

{% block pageTitleColumn %}
    {{ parent() }}

    <div class="col-auto ms-auto">
        <div class="btn-list">
            <div class="dropdown">
                <button type="button" class="btn dropdown-toggle" data-bs-toggle="dropdown" title="{{ 'submission.filter.dropdown'|trans }}">
                    <i class="ti ti-filter"></i>
                </button>
                <div class="dropdown-menu">
                    <a href="{{ path('submission_list', { '_projectId': activeProject.id }) }}" class="dropdown-item {% if filter != 'spam' and filter != 'valid' %}active{% endif %}">
                        <i class="ti ti-check {% if filter == 'spam' or filter == 'valid' %}invisible{% endif %}"></i>
                        {{ 'submission.filter.options.all'|trans }}
                    </a>
                    <div class="dropdown-divider"></div>
                    <a href="{{ path('submission_list_filtered', { '_projectId': activeProject.id, 'filter': 'spam' }) }}" class="dropdown-item {% if filter == 'spam' %}active{% endif %}">
                        <i class="ti ti-check {% if filter != 'spam' %}invisible{% endif %}"></i>
                        {{ 'submission.filter.options.spam'|trans }}
                    </a>
                    <a href="{{ path('submission_list_filtered', { '_projectId': activeProject.id, 'filter': 'valid' }) }}" class="dropdown-item {% if filter == 'valid' %}active{% endif %}">
                        <i class="ti ti-check {% if filter != 'valid' %}invisible{% endif %}"></i>
                        {{ 'submission.filter.options.valid'|trans }}
                    </a>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block pageBody %}
    <div class="container-xl">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div id="submissions">

                    </div>
                    {% if lastDatabaseCleanup %}
                        <div class="card-footer text-muted"><strong>{{ 'cleanup.lastDatabaseCleanup'|trans }}</strong> {{ lastDatabaseCleanup|date }}</div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <!-- Insert this at the end of your body element, but before the closing tag -->
    <script src="{{ asset('bundles/datatables/js/datatables.js')|add_path_prefix }}"></script>
    {% cspscript %}
        <script>
            var drawLabelTimeout = null;

            function drawAdditionalLabels()
            {
                let submissionTableContainer = $('#submissions');
                drawAdditionalLabel(submissionTableContainer, 'th.spam-column', 'spam-column-label', '{{ 'submission.list.spam'|trans }}');
                drawAdditionalLabel(submissionTableContainer, 'th.verification-column', 'verification-column-label', '{{ 'submission.list.verification'|trans }}');
            }

            function drawAdditionalLabel(container, columnSelector, labelClass, labelText)
            {
                let startPos = -1;
                let endPos = -1;
                container.find(columnSelector + ':visible').each(function () {
                    let pos = $(this).position();

                    if (startPos === -1 || pos.left < startPos) {
                        startPos = Math.floor(pos.left);
                    }

                    let columnEndPos = Math.floor(pos.left) + Math.floor($(this).outerWidth(true));
                    if (endPos < columnEndPos) {
                        endPos = columnEndPos;
                    }
                });

                let labelEl = container.find('.' + labelClass);
                if (labelEl.length === 0) {
                    labelEl = $('<div></div>').addClass('additional-column-label ' + labelClass).text(labelText).appendTo(container);
                }

                if (startPos === -1 || endPos === -1) {
                    labelEl.hide();
                } else {
                    labelEl
                        .show()
                        .css({
                            'left': startPos,
                            'width': endPos - startPos + 2
                        });
                }
            }

            $(function() {
                $('#submissions').initDataTables({{ datatable_settings(datatable) }}, {
                    autoWidth: false,
                    searching: false,
                    info: false,
                    responsive: {
                        details: {
                            renderer: function (api, rowIndex, columns) {
                                var data = $.map(columns, function (col, i) {
                                    if (!col.hidden) {
                                        return '';
                                    }

                                    let row = $('<tr></tr>').attr('data-dt-row', col.rowIndex).attr('data-dt-column', col.columnIndex);

                                    // Title
                                    $('<td></td>').html('<strong>' + col.title.trim() + '</strong>').appendTo(row);

                                    // Value
                                    $('<td></td>').html(col.data).appendTo(row);

                                    return row.prop('outerHTML');
                                }).join('');

                                return data ? $('<table/>').addClass('dt-details-table').append(data) : false;
                            }
                        }
                    },
                    columnDefs: [
                        { width: "1%", targets: 0 },
                        { width: "20%", targets: 1 },
                        { width: "15%", targets: 2 },
                        { width: "5%", targets: 3 },
                        { width: "9%", targets: 4 },
                        { width: "15%", targets: 5 },
                        { width: "5%", targets: 7 },
                        { width: "15%", targets: 8 }
                    ]
                }).then(function (dataTable) {
                    dataTable.on('responsive-resize', function (e, datatable, columns) {
                        drawAdditionalLabels();
                    });

                    drawAdditionalLabels();
                });

                $(window).resize(function () {
                    drawLabelTimeout = setTimeout(function () {
                        clearTimeout(drawLabelTimeout);

                        drawAdditionalLabels();
                    }, 200);
                });
            });
        </script>
    {% endcspscript %}
{% endblock %}
