# Header
header:
  pleaseChoose: Please choose…
  noProjectsFound: No projects found
  account: Account

projectGroup:
  mainGroup: Main group
  action:
    edit: Edit group
    delete: Delete group
    openMainGroup: Go back to main group
    openParentGroupName: Go back to %name%
    openParentGroup: Open parent group
    openGroup: Open group
    backToList: Back to projects list

  create:
    title: Create project group

  edit:
    title: Edit project group %projectGroupName%

  form:
    name: Name
    description: Description
    parentGroup: Parent group

    tooltip:
      activeGroup: You're editing this group.

    message:
      successfullySaved: The project group %projectGroupName% was saved successfully.

  delete:
    title: Delete project group %projectGroupName%
    confirm: Do you really want to delete the project group %projectGroupName%?
    reassignChildren: All project groups and projects in this project group will be assigned automatically to the parent project group.

    message:
      successfullyDeleted: The project group %projectGroupName% was deleted successfully.

projectGroupSelector:
  noGroupsAvailable: No groups available.
  noProjectsAvailable: No projects available

# Projects
project:
  title: Projects
  searchTitle: Projects for %searchQuery%
  backToList: Back to projects list
  infoNoProjectAvailable: No projects available
  infoCreateProjectOrRequestAccess: Create a new project or request access to another project.
  infoNoProjectsInThisGroup: There are no projects in this group.

  list:
    name: Name
    projects: Projects
    status: Status
    actions: Actions

  filter:
    dropdown: Filter the list of projects
    options:
      all: Show all
      active: Show active projects
      inactive: Show inactive projects

  search:
    placeholder: Search for…

  action:
    manage: Manage projects
    id: Project ID
    settings: Settings
    delete: Delete project
    goto: Go to project
    create: Create

  create:
    title: Create project

    message:
      successfullyCreatedAndConfigured: The new project was successfully created and configured.

  createWizard:
    design:
      title: Select design
      introStartWizard: Your project was created successfully. To start using it, please select the design and continue.
      infoAdvancedMode: After the wizard, you can switch to the advanced or invisible mode in the design settings. The advanced mode allows you to adjust the design precisely to your website, while the invisible mode will not show a visible mosparo box.

    security:
      title: Enable security features
      introSecurity: Please choose the security features you would like to enable.
      infoSettings: You can enable, disable, or tune these security features in the security settings after the wizard.

    connection:
      title: Connection details
      savedSuccessfully: The design and security settings were saved successfully. The project is now ready to be used on a website.
      introConnection: To use mosparo in a website, you have to add the integration to the website and then connect the website with this mosparo project. For this step, please copy and paste the following information into the correct field in the integration.
      infoSettings: After this wizard, you can find these connection details in the project settings.

  form:
    name: Name
    description: Description
    projectGroup: Project group
    projectGroupHelp: You can use project groups to organize your projects. Select the project group in which you want to store this project.
    hosts: Hosts
    hostsHelp: These hosts are used to respond with the correct security headers (CORS). A host is a domain (or subdomain) that hosts your website without protocol and path (for example, example.com). You must add all domains and subdomains that use this project and all variations (for example, www.example.com and example.com). You can use a star (*) at the start of a host as a wildcard (for example, *.example.com). Using the star as a prefix and not as a global wildcard for all hosts is recommended.
    status: Status
    statusHelp: Activate or inactivate the spam detection. If inactive, the system will log all submissions but will not prevent any submission.
    spamScore: Spam score
    spamScoreHelp: Defines the number from which a submission will be rated a spam. If the rating of a submission is above this nubmer, the submission is rated as spam.
    statisticStorageLimit: Statistic storage
    statisticStorageLimitHelp: Defines how long mosparo should keep the statistics in the database. This option has no connection to the storage range of the submissions, after which the submissions get deleted from the database (14 days).
    languageSource: Language source
    apiDebugMode: API debug mode
    apiDebugModeHelp: If the API debug mode is enabled, the verification API will return more information about the verification process. This information can be relevant to understand why a verification failed. Use this option to help integrate mosparo into your form.
    verificationSimulationMode: Verification simulation mode
    verificationSimulationModeHelp: You can simulate the verification process if the verification simulation mode is enabled. Please open the submission details and click the button in the top right corner. The simulation tool will show you how your request should look and which data mosparo expects to verify the submission.

  delete:
    title: Delete project %projectName%
    confirm: Do you really want to delete the project %projectName%?
    disconnectFirst: Please ensure you have disconnected your website or integration with this project before deleting it.

    message:
      successfullyDeleted: The project %projectName% was deleted successfully.

  roles:
    reader: Reader
    editor: Editor
    owner: Owner

# Dashboard
dashboard:
  title: Dashboard

  dateRange:
    dropdown: Select visible date range

  chart:
    valid: Valid
    spam: Spam

    annotation:
      statisticOnly: Statistic only

# Rules
rule:
  title: Rules
  backToList: Back to rules

  list:
    name: Name
    type: Type
    status: Status
    actions: Actions

  createChooseType:
    title: Choose type
    intro: Please choose the type of rule you want to create. The available types are used for different fields and cannot be changed for a rule afterward.

  create:
    title: Create rule

    message:
      successfullyCreated: The new rule was created successfully.

  edit:
    title: Edit rule %ruleName%

    message:
      successfullySaved: The rule was saved successfully.

  form:
    ruleType: Rule type

    rule:
      title: Rule
      name: Name
      description: Description
      status: Status
      spamRatingFactor: Spam rating factor
      spamRatingFactorHelp: With the spam rating factor you can define a factor which strengthens or weakens the entries of this rule. If the value is greater than 1.0, the entries are strengthened, if the value is less than 1.0, the entries are weakened.

    items:
      title: Items
      type: Type
      rating: Rating

    addMultipleItems:
      label: Label
      items: Items
      itemsHelp: Add one item per line.
      rating: Rating
      ratingHelp: If not set, the default rating is 1.0. If the rating is set to 0.0, the items will not be rated as spam items.

  delete:
    title: Delete rule %ruleName%
    confirm: Do you really want to delete the rule %ruleName%?

    message:
      successfullyDeleted: The rule %ruleName% was deleted successfully.

  filter:
    dropdown: Filter the list of rules
    options:
      all: Show all

  type:
    domain:
      title: Domain
      shortIntro: Allows to filter by specific domains
      intro: The domain rule type allows to filter for domains.
      label: Domain
      placeholder: example.com

      domain:
        title: Domain
        intro: Enter a domain which is not allowed to submit a submission. If you enter a domain it will also catch all email addresses with this domain.

    email:
      title: Email
      shortIntro: Allows to filter by specific email addresses
      intro: The email rule type allows to filter for email addresses.
      label: Email address
      placeholder: info@example.com

      email:
        title: Email address
        intro: Enter an email address which is not allowed to submit a submission.

    ipAddress:
      title: IP address
      shortIntro: Allows to filter by ip addresses and subnets
      intro: The IP address rule type allows to filter for IP addresses or subnets.
      label: IP address/Subnet
      placeholder: 0.0.0.0

      ipAddress:
        title: IP address
        intro: Enter an IP address which is not allowed to make any submissions.

      subnet:
        title: Subnet
        intro: Enter a subnet with mask which is not allowed to make any submissions.

    provider:
      title: Provider
      shortIntro: Allows to filter by provider specific information
      intro: The provider rule type allows to filter for AS numbers and country codes.
      infoGeoip2: To use the provider type it is required to configure the MindMax GeoLite2 database, otherwise, the provider items will not have any effect.
      label: AS number/Country

      action:
        configureGeoip2: GeoIP2 Configuration

      asNumber:
        title: AS number
        intro: Enter an AS number which is not allowed to make any submissions. All IP addresses which belongs to this AS number will be blocked.

      country:
        title: Country
        intro: Enter an ISO country code which is not allowed to make any submissions. All IP addresses which are registred in this country will be marked as spam.
        infoCountryBlock: If you add a country to the rule, it means that nobody from this country can make a submission. While this sounds good on one side it could mean that this will block a real user from submitting a form. Please be careful with this option. The correct localization of IP addresses is never guaranteed.

    unicodeBlock:
      title: Unicode block
      shortIntro: Filters the input based on the characters used.
      intro: The Unicode block rule type allows to evaluate the use of certain characters.
      label: Unicode block

      block:
        title: Block
        intro: Please select one of the blocks which should be rated accordingly during input. Then enter a corresponding rating.
        hintExtended: Please note that there are extensions and additions to some blocks, which must also be added as a rule entry.
        explanationCounting: In the validation, each block is counted only once, even if several characters from one block were used.
        exampleCounting: Suppose you enter a rule entry with the "Smileys" block with a rating of 3 points. In a submission, the user uses 5 smileys. The submission is now rated with 3 points because a smiley was used.

    userAgent:
      title: User agent
      shortIntro: Allows to filter by specific words or patterns in the user agent
      intro: The user agent rule type allows to filter for words and Regular Expression patterns in the user agent of the user.
      label: User agent (Word/Pattern)

      text:
        title: Text
        intro: Enter a word which should be rated as spam. You can use the star %star% as wildcard. The matching functionality will search for %value%, so you do not have to add the wildcard character at the beginning or at the end of the value.

      regex:
        title: Regular Expression
        intro: Enter a Regular Expression pattern which will match a not allowed word. The pattern has to follow the PHP Regular Expression requirements.

        validation:
          invalidRegexPattern: 'The entered pattern is invalid. Error: %error%'

    website:
      title: Website
      shortIntro: Allows to filter by specific websites
      intro: The website rule type allows to filter for URLs.
      label: URL/Domain
      placeholder: 'https://example.com'

      url:
        title: URL
        intro: Enter an URL which is not allowed to submit a submission.
        infoProtocol: It is recommend to start the URL with the protocol or with two slashes for protocol-independent URLs. If the value does not start with the protocol the rule could match wrong URLs.

    word:
      title: Word
      shortIntro: Allows to filter by specific words or patterns
      intro: The word rule type allows to filter for words and Regular Expression patterns.
      label: Word/Pattern

      text:
        title: Text
        intro: Enter a word which should be rated as spam. You can use the star %star% as wildcard. The matching functionality will search for %value%, so you do not have to add the wildcard character at the beginning or at the end of the value.

      regex:
        title: Regular Expression
        intro: Enter a Regular Expression pattern which will match a not allowed word. The pattern has to follow the PHP Regular Expression requirements.

        validation:
          invalidRegexPattern: 'The entered pattern is invalid. Error: %error%'

    rating:
      title: Rating
      intro: The rating field allows you to define an item's weight. If you specify a positive number, you can assign a higher value to an item. If you specify a negative number, the item will reduce the total number of points.
      infoCalculationMethod: The spam rating value will be calculated by multiplying the item rating and the spam rating factor which is defined in the rule.
      infoDefaultAndDataType: The rating is a float number from %minValue% to %maxValue%. If no rating is defined, the default rating is %one%.
      infoValueEqualZero: If the rating is set to %zero%, the item will not be detected as spam since the spam rating value will be %zero% in any case.
      placeholder: Rating

# Rule package
rulePackage:
  title: Rule packages
  backToList: Back to rule packages

  message:
    errorWhileUpdating: 'An error occurred while updating the rule package:'

  list:
    name: Name
    type: Type
    status: Status
    refreshedAt: Refreshed at
    updatedAt: Updated at
    actions: Actions

  addChooseType:
    title: Choose type
    intro: Please choose which type of rule package you want to add. You can choose between automatic and manual types. The automatic types will update the rule package automatically, while the manual ones must be updated by an external action or tool.

  add:
    title: Add rule package

  edit:
    title: Edit rule package %rulePackageName%

  form:
    name: Name
    sourceUrl: Source URL
    sourceUrlHelp: Specify the URL from which mosparo can download the rule package.
    sourceFile: Source file
    sourceFileHelp: Specify the absolute file path at which the rule package file is stored.
    status: Status
    spamRatingFactor: Spam rating factor
    spamRatingFactorHelp: With the spam rating factor you can define a factor that strengthens or weakens all rules of this rule package. If the value is greater than 1.0, the rules will be strengthened, if the value is less than 1.0, the rules will be weakened.

    message:
      successfullySaved: The rule package was saved successfully.

  view:
    title: View rule package %rulePackageName%

    details:
      title: Rule package details
      source: Source
      sourceManualImport: Manual import
      status: Status
      spamRatingFactor: Spam rating factor
      lastRefreshedAt: Last refreshed at
      lastUpdatedAt: Last updated at
      numberOfIncludedRules: Number of included rules
      importFirstTitle: Import rule package first
      importFirst: This rule package does not contain any data. Please import the rule package data manually.
      noRulePackageCache: There is no rule package cache stored for this rule package. This means that the download was not successful or something else went wrong.

    includedRules:
      title: Included rules
      ruleDetails: Rule details
      name: Name
      description: Description
      spamRatingFactor: Spam rating factor
      items: Items
      type: Type
      value: Value
      rating: Rating

    list:
      rules:
        name: Name
        type: Type
        numberOfRuleItems: Number of items
        spamRatingFactor: Spam rating factor
        actions: Actions

      ruleItems:
        type: Type
        value: Value
        spamRatingFactor: Spam rating factor

    howtoImport:
      title: How to import
      intro: This rule package is a manually imported rule package type. This means you must import the rule package data for this rule package. Otherwise, the rule package is empty and will not prevent any spam.

      arguments:
        required: Required
        value: Value
        description: Description

      cli:
        intro: Please use the following command to import the rule package via CLI. One of the arguments %codeArgFile% or %codeArgInput% is required.
        infoAdjustPaths: Please remember to adjust the paths to the PHP binary and the mosparo CLI command. Your hosting provider's documentation usually provides more information about this part.

        arguments:
          descriptionProjectId: Specifies the project ID of the rule package.
          descriptionRulePackageId: Specifies the rule package ID.
          descriptionFile: Specifies the file path to the rule package file.
          descriptionInput: The command will read the rule package content from the standard input if set.
          descriptionHash: If the command should verify the hash of the rule package, specify the SHA256 hash with this argument.

      api:
        intro: Please import the rule package content using the mosparo API. You can use the API directly or use one of our API clients, or you can also use mosparo RPG (Rule Package Generator) to build and import the rule package content.
        introSecond: Below is the most important information about the API and an example if you want to use the rule package with mosparo RPG. Read more about the different options in our documentation.

        endpoint:
          title: Endpoint

        arguments:
          descriptionRulePackageId: Specifies the rule package ID.
          descriptionRulePackageContent: Specifies the content of the rule package.
          descriptionRulePackageHash: To verify the hash before importing the content, specify the SHA256 hash with this argument.

        example:
          intro: This example shows the configuration required for the mosparo RPG profile. Please see the documentation for other options.

    rule:
      title: View rule %ruleName%

      details:
        title: Rule details
        name: Name
        type: Type
        spamRatingFactor: Spam rating factor

      items:
        title: Included items

      backToRulePackage: Back to rule package

  delete:
    title: Delete rule package %rulePackageName%
    confirm: Do you really want to delete the rule package %rulePackageName%?

    message:
      successfullyDeleted: The rule package %rulePackageName% was deleted successfully.

# Submission
submission:
  title: Submissions
  backToList: Back to submissions

  list:
    id: ID
    page: Page
    spam: Spam
    verification: Verification
    ipAddress: IP address
    spamRating: Spam rating
    submittedAt: Submitted at
    valid: Valid
    verifiedAt: Verified at
    actions: Actions

  filter:
    dropdown: Filter the list of submissions
    options:
      all: All submissions
      spam: Spam submissions
      valid: Valid submissions

  view:
    title: Submission %submissionId%

    action:
      openVerificationSimulation: Verification simulation

    spam:
      title: Spam
      isSpam: Is spam
      spamRating: Spam rating
      submittedAt: Submitted at

    verification:
      title: Verification
      isValid: Is valid
      verifiedAt: Verified at

      minimumTime:
        requiredTime: Required time
        timeDifferenceInSeconds: '%seconds% seconds'

    source:
      title: Source
      pageTitle: Page title
      pageUrl: Page URL
      requestedAt: Requested at

    ignoredFields:
      title: Ignored fields
      intro: The following fields were not transmitted because of their field type (in example password or file upload fields).

    data:
      value: Value
      rating: Rating
      points: '%totalPoints% points'
      fieldMustBeEmpty: Field must be empty

      formData:
        title: Form data
        honeypot: Honeypot
        valid: Verification successful
        invalid: Verification failed
        notVerified: Not verified
        hasPoints: Points

      client:
        title: Client
        ipAddress: IP address
        userAgent: User-Agent
        asNumber: AS number
        asOrganization: AS organization
        country: Country

    generalVerifications:
      title: General verifications

      features:
        proofOfWork: Proof of work
        minimumTime: Minimum time
        equalSubmissions: Equal submissions

      minimumTime:
        title: Submission too fast
        text: The form was submitted too fast. The submitter required only %seconds% seconds, which is less than the minimum time of %minimumTimeSeconds% seconds.
        minimumTime: 'Minimum time:'
        measuredTime: 'Measured time:'

      proofOfWork:
        title: Proof of work incorrect
        text: mosparo received the wrong result for the proof of work verification method. This usually means that someone tried to bypass the proof of work mechanism.
        expectedHash: 'Expected hash:'
        generatedHash: 'Generated hash:'

      equalSubmissions:
        title: Too many equal submissions
        text: This submission is equal to previous submissions. mosparo found %actualNumberOfEqualSubmissions% equal submissions within the configured time range, more than the allowed number of %allowedNumberOfEqualSubmissions% equal submissions.
        maximumAllowed: 'Maximum allowed:'
        counted: 'Counted:'

    verificationSimulation:
      title: Verification simulation
      intro: The verification simulation shows you which data mosparo accepts for the verification process. You can compare the displayed data with the data your verification process will generate to find possible problems.

      buttons:
        customIntegration: Custom integration
        apiDocumentation: API documentation

      errors:
        noValidationToken: The verification simulation is impossible because no validation token is stored for this submission. This means that the data in the form did not pass the mosparo validation, making the verification impossible.

      info:
        authorizationHeader: The authorization header must be Base64-encoded.

      labels:
        formData: Form data
        submitToken: Submit token
        validationToken: Validation token
        preparedFormData: Prepared form data
        hashedFormData: Hashed form data
        formDataJson: Form data as JSON
        privateKey: Private key
        formDataSignature: Form data signature
        validationSignature: Validation signature
        validationAndFormDataSignature: Validation and form data signature
        verificationSignature: Verification signature
        apiEndpoint: API endpoint
        requestData: Request data
        apiEndpointAndRequestDataJson: API endpoint and request data
        requestSignature: Request signature
        authorization: Authorization
        username: Username
        password: Password
        method: Method
        headers: Headers
        postData: Post data
        response: Response

      hints:
        formData: The form data submitted by your form.
        submitToken: Submit token from step 1.
        validationToken: Validation token from step 1.
        preparedFormData: The form data from step 1 after the preparation.
        hashedFormData: The hashes for the prepared form data from step 2.
        privateKey: Private key from the project.
        publicKey: Public key from the project.
        formDataJson: Hashed form data from step 3 as JSON string.
        validationSignature: Validation signature from step 5.
        formDataSignature: Form data signature from step 4.
        hashedFormDataPlain: Hashed form data from step 3.
        apiEndpoint: The verification API endpoint.
        requestSignature: Request signature from step 8.
        requestDataJson: Request data from step 7 as JSON string.
        verificationSignature: Verification signature from step 6.
        requestDataPlain: Request data from step 7.
        response: Response from the API.

      sections:
        one:
          title: 'Step 1: Extract submit and validation token'
          intro: To verify a submission, you have to know the submit token, which identifies a submission, and the validation token, which proves the validity of the submission. Extract these two tokens from the form data.
        two:
          title: 'Step 2: Prepare the form data'
          intro: Before sending the data to the verification API, you must prepare the form data. The mosparo fields (starting with %codeStart%_mosparo_%codeEnd%) must be removed from the form data. After that, please replace all CRLF line breaks with LF line breaks and change all field names to lowercase letters. Sort the form data by name in alphabetical order (A-Z).
        three:
          title: 'Step 3: Generate the hashes'
          intro: For the verification, mosparo excepts the form data as SHA256 hashes. For this, the SHA256 hashes for the form data must be calculated.
        four:
          title: 'Step 4: Generate form data signature'
          intro: You must generate the form data's signature to ensure that nothing has manipulated the form data. The signature is an HMAC SHA256 hash of the form data hashes (Step 2), encoded as JSON. Use the private key of the project as key.
        five:
          title: 'Step 5: Generate validation signature'
          intro: Use the validation token, which you extracted from the form data in the first step, and generate the signature of it. The signature is an HMAC SHA256 hash of the validation token. Use the private key of the project as key.
        six:
          title: 'Step 6: Generate verification signature'
          intro: Combine the validation and the form data signature and create the verification signature. The signature is an HMAC SHA256 hash combining the validation and form data signatures. Use the private key of the project as key.
        seven:
          title: 'Step 7: Collect request data'
          intro: After all the data is collected and the signatures and hashes generated, it's time to send it to the API for verification. For that, please collect the following information.
        eight:
          title: 'Step 8: Generate request signature'
          intro: To ensure the request is valid, you must generate the signature for the request. First, convert the request data into a JSON string. Combine the API endpoint with the request data JSON string and Generate the HMAC SHA256 hash for this string with the private key of the project as key.
        nine:
          title: 'Step 9: Send the API request'
          intro: All data were collected and prepared. Now, you can send the data to the API.
        ten:
          title: 'Step 10: Verify the response'
          intro: mosparo will answer your API request with a JSON string. Decode the JSON string and check if a key %codeStart%valid%codeEnd% exists and is set to %codeStart%true%codeEnd%. If that's the case, ensure that the key %codeStart%verificationSignature%codeEnd% is set as well and is equal to the verification signature generated in step 6. If that's the case, the response is valid.

# Settings
settings:
  title: Project settings
  backToSettings: Back to settings

  general:
    title: General settings

    message:
      successfullySaved: The settings were saved successfully.

    action:
      reissueApiKeys: Reissue API keys
      reissue: Reissue

    help:
      integrateMosparo: Integrate mosparo

    connectionDetails:
      title: Connection details
      host: Host
      uuid: Unique identification number

    apiKeys:
      title: API Keys
      publicKey: Public key
      privateKey: Private key

      reissueApiKeys:
        title: Reissue API keys
        confirm: Do you really want to reissue the API keys for the project %projectName%?

        message:
          successfullyReissued: The API keys were reissued successfully.
          errorOnlyOwner: Only an owner of the project can reissue the API keys.

  advanced:
    title: Advanced settings

    subtitle:
      spamDetectionOptions: Spam detection options
      statisticsOptions: Statistic options
      languageOptions: Language options
      developerOptions: Developer options

  projectMember:
    title: Project members
    backToList: Back to project members

    list:
      user: User
      role: Role
      actions: Actions

    add:
      title: Add project member

    edit:
      title: Edit project member %projectMemberName%

    form:
      email: Email address
      role: Role

      message:
        successfullySaved: The project member was saved successfully.
        errorUserNotFound: The user was not found.
        errorNeedsOwner: The project needs at least one owner.

    delete:
      title: Remove project member %projectMemberName%
      confirm: Do you really want to remove the project member %projectMemberName%?

      message:
        successfullyRemoved: The project member %projectMemberName% was removed successfully from the project.

  security:
    title: Security
    backToSecurity: Back to security settings

    generalSecuritySettings:
      title: General security settings
      intro: The general security settings apply to all users not matched by an origin-based security guideline.
      action: Edit general security settings

    originBasedSecuritySettings:
      title: Origin-based security guidelines

      add:
        title: Add guideline

    guideline:
      list:
        name: Name
        priority: Priority
        actions: Actions

      add:
        title: Add guideline

      edit:
        title: Edit guideline %guidelineName%

      form:
        guideline:
          title: Guideline
          name: Name
          description: Description
          priority: Priority
          priorityHelp: Defines in which order the guidelines will be tested. The highest guideline will be tested first.

        criteria:
          title: Criteria
          intro: Please define the criteria for this guideline. With the criteria, you can define for which origin these security settings should be used.
          intro2: The guideline will be used for the user as soon as one of these criteria matches. You must add at least one criterion to save the guideline.
          subnets: Subnets
          subnetsHelp: "Add the subnets for which this guideline should be considered. You can define IPv4 or IPv6 subnets. You can see the IP address in the submission details. Example: 192.168.1.0/24"
          countryCodes: Country codes
          countryCodesHelp: "Add the country codes (ISO alpha-2) for which this guideline should be considered. You can see the country code in the submission details. Example: CH"
          asNumbers: AS numbers
          asNumbersHelp: "Add the AS numbers for which this guideline should be considered. You can see the AS number in the submission details. Example: 123456"

        settings:
          title: Override settings
          intro: Please check the override checkbox for the settings you want to override from the project or general security settings. If you do not override a setting, mosparo will use the one from the project or general security settings. If you configure the same value as in the project or general security settings, the custom value is removed from the security policy.

        infoGeoIp2Disabled: GeoIP2 is not available. Please configure the GeoIP2 database to use the country codes and AS numbers criteria.

      delete:
        title: Remove security guideline %guidelineName%
        confirm: Do you really want to remove the security guideline %guidelineName%?

        message:
          successfullyRemoved: The security guideline %guidelineName% was removed successfully from the project.

    spamDetection:
      title: Spam detection
      intro: Define if the spam protection should be enabled for this security guideline and which spam score should be used to identify spam.
      intro2: If you do not override the spam detection settings, the settings from the project will be used.

    minimumTime:
      title: Minimum Time
      intro: The minimum time functionality will measure the time between the initialization of the mosparo checkbox (when the page loads) and the validation of the submission (after the form was submitted). If this time is lower than the entered number below, the validation is invalid. If you have a short form, this check should be disabled or you should us a very low number.
      introShort: The minimum time functionality will measure the time between the initialization of the mosparo checkbox (when the page loads) and the validation of the submission (after the form was submitted). This functionality is mainly recommended for longer forms.

    honeypot:
      title: Honeypot
      intro: A honeypot field is a hidden field in the form. Humans will not be able to see it - but spam bots will probably fill some content in this field. If that happens, we know it was not a human, so that we can block the submission.
      infoField: Please enter a name for the honeypot field. The name should be a normal field name that you haven't used in your form yet. mosparo will add the hidden field automatically; you do not have to alter your form.

    requestDelaying:
      title: Request delaying
      intro: To make it harder for bots, mosparo can delay the creation of submit tokens. Without a submit token, a form cannot be submitted. The user will see, how long he has to wait, until the form is submittable.
      infoIpAddress: In which case the creation of the token needs to be delayed, will be decided because of the number of requests the IP address has made. With every additional token request, the delay will be extended.

    ipLockout:
      title: IP lockout
      intro: To make it even harder for bots, mosparo can automatically block IP addresses temporarily. If an IP address submits many forms, mosparo can automatically count the submissions and block the IP address if a specific number is reached.

    proofOfWork:
      title: Proof of Work mechanism
      intro: The proof of work mechanism lets the browser automatically calculate many hashes to find the correct result. The browser needs time to solve this calculation, which a spam bot does not like to spend.
      subtitle: Dynamic complexity
      introDynamicComplexity: With the dynamic complexity, the automatic puzzle is generated with a more extensive number range, which means that the browser needs to calculate more and waste more time. If the dynamic complexity is based on the IP address, only clients with many submissions in a specified time range will have more complex puzzles.

    equalSubmissions:
      title: Block equal submissions
      intro: An additional security measurement is to block equal submissions. If a user tries to submit the same submission too often in a defined time frame, mosparo will block all future submissions until the time frame expires. Additionally, this check can be limited to the IP address.

    ipAllowList:
      title: IP allow list
      intro: Enter the IP addresses and subnets that should be excluded from the security measures configured above (Request delaying and IP lockout).

    form:
      minimumTimeActive: Enable minimum time
      minimumTimeSeconds: Minimum time
      honeypotFieldActive: Enable honeypot field
      honeypotFieldName: Field name
      honeypotFieldNameHelp: It has to be a field name which is not already in your form and which is a normal field name like "url" or "address-line-2". Please use only letters, numbers and the dash sign (-). If empty, no honeypot field will be added to the form.
      delayActive: Enable request delay
      delayNumberOfAllowedRequests: Number of allowed requests
      delayNumberOfAllowedRequestsHelp: The number of allowed requests before the delay come into place.
      delayDetectionTimeFrame: Detection time frame
      delayTime: Base delay time
      delayMultiplicator: Multiplicator
      delayMultiplicatorHelp: The base delay time will be increased with every additional request.
      lockoutActive: Enable automatic lockout
      lockoutNumberOfAllowedRequests: Number of allowed requests
      lockoutNumberOfAllowedRequestsHelp: The number of allowed requests before the lockout come into place.
      lockoutDetectionTimeFrame: Detection time frame
      lockoutTime: Base lockout time
      lockoutMultiplicator: Multiplicator
      lockoutMultiplicatorHelp: The base lockout time will be increased with every additional request.
      proofOfWorkActive: Enable proof of work
      proofOfWorkComplexity: Complexity
      proofOfWorkDynamicComplexityActive: Enable dynamic complexity
      proofOfWorkDynamicComplexityMaxComplexity: Maximum complexity
      proofOfWorkDynamicComplexityNumberOfSubmissions: Number of submissions to reach maximum complexity
      proofOfWorkDynamicComplexityNumberOfSubmissionsHelp: Defines the number of submissions needed within the configured detection time frame to reach the maximum complexity number.
      proofOfWorkDynamicComplexityTimeFrame: Detection time frame
      proofOfWorkDynamicComplexityBasedOnIpAddress: Based on IP address
      proofOfWorkDynamicComplexityBasedOnIpAddressHelp: The detection will happen on the user's IP address. If disabled, all submissions of all users within the time frame will be counted.
      equalSubmissionsActive: Enable block equal submissions
      equalSubmissionsNumberOfEqualSubmissions: Number of allowed equal submissions
      equalSubmissionsNumberOfEqualSubmissionsHelp: The number of allowed equal submissions before the block come into place.
      equalSubmissionsTimeFrame: Detection time frame
      equalSubmissionsBasedOnIpAddress: Based on IP address
      equalSubmissionsBasedOnIpAddressHelp: The detection and blocking will happen on the user's IP address. If disabled, all equal submissions of all users will be counted.
      ipAllowList: Always allowed IP addresses and subnets
      ipAllowListHelp: "Specify one IP address or subnet per line. Example: 192.168.1.13 or 192.168.1.0/24"

      overrideSpamDetection: Override spam detection
      overrideMinimumTime: Override minimum time
      overrideHoneypotField: Override honeypot field
      overrideDelay: Override request delay
      overrideLockout: Override automatic lockout
      overrideProofOfWork: Override proof of work
      overrideEqualSubmissions: Override block equal submissions

    message:
      successfullySaved: The security settings were saved successfully.
      guidelineSuccessfullySaved: The security guideline was saved successfully.

    crypto:
      numberRange: Number range
      maximumTimeToSolve: Max time to solve
      speed: Speed
      rangeSizeHelp: The larger the number range, the more calculations a browser has to perform. It's recommended not to use a too large number range because it takes time for the user to submit the form.
      cryptoSpeedHelp: These values are tested and calculated on your device. Other devices can be faster or slower. These numbers should give you an indication, but they do not show the exact duration for every user.

  design:
    title: Design

    subtitles:
      dimensionSettings: Dimensions
      colorSettings: Colors
      simpleDesign: Simple design
      invisibleSimpleDesign: Invisible simple design
      colorAndDimensionSettings: Colors and Dimension
      preview: Preview
      colors:
        normal: Normal
        focus: On focus and hover
        loading: When loading
        success: Success
        failure: Failure

    dropdown:
      title: Design mode
      groupTitleVisible: Visible spam protection
      groupTitleInvisible: Invisible spam protection
      simple: Simple
      advanced: Advanced

    preview:
      background: Preview background

    cr:
      title: Contrast ratio
      value: Value
      text: Text
      textError: Text Error
      description: The value shown above describes the ratio between the background color and the text color. The two columns next to it indicate whether the minimum requirement for the WCAG guidelines are met.

    form:
      boxSize: Box size
      boxRadius: Box radius
      boxBorderWidth: Border width
      showMosparoLogo: Show mosparo logo below the checkbox
      showPingAnimation: Show ping animation to highlight the checkbox
      invisibleLogo: Logo
      invisiblePageOverlay: Page overlay
      fullPageOverlay: Use full page overlay
      color:
        background: Background
        border: Border
        checkbox: Checkbox
        checkboxShadow: Checkbox Shadow
        checkboxAnimatedCircle: Animated Part
        text: Text
        textError: Text Error
        shadow: Shadow
        shadowInset: Shadow Inset
        websiteBackground: Background color of the website
        websiteForeground: Foreground color of the website
        websiteAccent: Accent color of the website
        loaderBackground: Background color of the loader overlay
        loaderText: Text color of the loader
        loaderCircle: Color of the loading circle

      help:
        websiteBackground: Choose the background color of your website. This color is used to calculate the contrast ratio.
        websiteForeground: Choose the foreground color of your website. This color is used to display the main elements of the mosparo box.
        websiteAccent: Choose the accent color of your website. This color is used for different elements of the mosparo box.
        boxSize: Choose the size of the box.

        loaderBackground: Define the background color of the loader overlay. It should be slightly transparent to see your website in the background.
        loaderText: Define the color of the text in the overlay.
        loaderCircle: Define the color of the animated loader circle.
        textError: This is the text color with which the error will be visible if there is an error.
        showMosparoLogo: Shows the logo below the loading message.
        fullPageOverlay: Defines if the overlay will block the full page or only the form for which mosparo validates the data.

    choices:
      boxSize:
        small: Small
        medium: Medium
        large: Large

    message:
      successfullySaved: The design settings were saved successfully.
      boxRadiusTooLarge: The logo can only be displayed if the radius of the box is below a certain value.

    simpleDesign:
      introColors: Please choose the colors which your website has. The background color is required to calculate the correct contrast ratio, the foreground color represents your text color, and the accent color is used for the special elements of the mosparo box.
      introPreview: On the right side, you'll see a preview of the mosparo box on your website.

tools:
  title: Tools

  ruleTester:
    title: Rule tester
    description: Test how your rules will detect spam.
    intro: Enter the value you want to test. Choose which data type you want to use for the test and if you want to use rules and rule packages. The data type is important because some rule types only apply to specific data types.

    form:
      title: Test settings
      value: Test value
      valueHelp: Enter the value you want to test your rules with.
      type: Data type
      typeHelp: Select the data type. Some rule types do only apply to specific data types.
      useRules: Use rules
      useRulesHelp: Activate this field to test your rules.
      useRulePackages: Use rule packages
      useRulePackagesHelp: Activate this field to test your rule packages.

    types:
      textField: Text field (Single-line)
      textarea: Text field (Multi-line)
      emailField: Email field
      urlField: URL field
      userAgent: User-Agent
      ipAddress: IP address

    result:
      title: Test result

      testData:
        title: Test data
        testValue: Test value
        fieldType: Field type
        enabledRules: Enabled rules

      detectionResult:
        title: Detection result
        isSpam: Is spam
        spamRating: Spam rating
        spamDetectionRating: Spam score

      matchedRules:
        title: Matched rules

      table:
        type: Rule type
        value: Value
        rating: Rating
        noMatchingRules: No rule matched the test value.

  export:
    title: Export
    intro: If you want to move your project to a different mosparo installation or if you want to synchronize the settings with another project, you can export the project with this functionality. Choose which data you want to export and click the button.
    includedData: Included data
    infoSensitiveData: Sensitive data will never be included in the export. Submissions, submit tokens, the unique project identifier, the API keys, and the project members will not be in the export.
    infoManualRulePackages: The rule package content will not be included in the export. This means that all manually imported rule packages need to be reimported after importing the export file.

    errorMessage:
      selectAtLeastOneElement: Select at least one element that you want to export.

  import:
    title: Import
    intro: If you want to copy the data from another project into this one, please choose the file to import and which data you want to import. If you import the rules, please choose how mosparo should handle existing rules.
    intro2: After you've selected all the data, please click the button below. mosparo will analyze the file and gives you a summary of what will be changed before anything is imported.
    importData: Data to import
    infoOverrideData: The settings, as well as the rule packages, will always be overridden in the project. For the rules, you have to choose what mosparo should do with existing rules. Rule packages created before version 1.4.0 of mosparo may have a different ID and not match the import file.

    backToImport: Back to import

    form:
      importFile: File to import
      handlingExistingRules: Handling of existing rules

      choice:
        override: Override
        overrideHelp: All existing rules will be overridden with the rule from the import file. All additional rule items will be deleted.
        append: Append
        appendHelp: mosparo will append the rule items from the file to the existing rules but will not delete any rule items.
        add: Add
        addHelp: mosparo will add existing rules as new rules. The new rules will receive a new identifier.

    message:
      changesSuccessfullyExecuted: The changes were executed successfully.

    errorMessage:
      selectAtLeastOneElement: Select at least one element that you want to import.
      fileUploadError: The file was not uploaded correctly. Please check the log file.

    simulate:
      title: Available changes
      intro: mosparo simulated the import and detected the following changes. Please review them and execute the changes if everything is okay.
      notRedoable: You cannot redo these changes as soon as you've executed them. You can export the project before executing the changes to have a configuration backup.
      noChangesFound: The project is already the same as the data in the import file, and no changes are available.

      changes:
        notActive: This section is not active for this import.
        notInExport: This section is not available in the import file.
        noChangesRequired: For this section are no changes required since everything is up to date already.

      table:
        name: Name
        oldValue: Old value
        newValue: New value
        type: Type
        status: Status
        source: Source
        add: Add
        modify: Modify
        items: Items
        itemsAdd: Add
        itemsModify: Modify
        itemsRemove: Remove
        spamRatingFactor: Spam rating factor
        priority: Priority
        criteria: Criteria
        securitySettings: Security settings
        guidelineNew: New guideline
        guidelineModify: Modification required
        guidelineEqual: No modification required

      errorMessage:
        jobDataFileNotFound: Job data file for token does not exist.
        jobDataInvalid: Job data for token are invalid.
        importFileNotFound: The import file does not exist.
        importFileInvalid: The import file is not valid.
        projectNotAvailable: Cannot find project by id.
        wrongSpecificationsVersion: The import file was created with a different specifications version than this mosparo is using.
        noChangesAvailable: There are no changes are available.
        storedRuleNotFound: The stored rule was not found.
        storedRuleItemNotFound: The stored rule item was not found.
        storedRulePackageNotFound: The stored rule package was not found.

  eiParts:
    generalSettings: General settings
    generalSettingsHelp: Includes the general settings of a project like the name, the description, the hosts as well as the spam score.
    designSettings: Design settings
    designSettingsHelp: Includes all settings related to the design of a project.
    securitySettings: Security settings
    securitySettingsHelp: Includes all settings related to the security of a project.
    rules: Rules
    rulesHelp: Includes all rules of a project.
    rulePackages: Rule packages
    rulePackagesHelp: Includes all rule packages of a project.

# Administration
administration:
  title: Administration

  settings:
    title: System settings
    description: Configure various settings which apply to your mosparo installation.

    mainSettings:
      title: Main settings
      form:
        mosparoName: Name of the mosparo installation

    localeSettings:
      title: Locale settings
      form:
        defaultLocale: Default language
        defaultDateFormat: Default date format
        defaultTimeFormat: Default time format
        defaultTimezone: Default timezone

    interfaceSettings:
      title: Interface settings
      form:
        defaultColorMode: Default color mode

    mailSettings:
      title: Mail settings
      form:
        useSmtp: Use a SMTP server to send emails
        host: Host
        port: Port
        user: User
        password: Password
        fromAddress: From email address
        fromName: From name

      help:
        password: If you enter something in this field, the existing value will be overwritten.

    message:
      savedSuccessfully: The settings were saved successfully.

  security:
    title: Security settings
    description: Configure various security related settings which apply to your mosparo installation.

    loginThrottling:
      title: Login throttling
      intro: Login throttling helps to protect the mosparo login from a brute force attack. By counting the number of requests and blocking an attacker after some tries, such an attack will take a lot of time and is nearly senseless.

      form:
        uiLimit: Number of requests for username and IP address
        uiLimitHelp: This is the number of requests an attacker can make for a combination of a username and IP address.
        ipLimit: Number of requests for an IP address
        ipLimitHelp: This is the number of requests an IP address can make on different usernames. This number should be higher than the number of requests for username and IP address.
        interval: Time range
        intervalHelp: The time in minutes when the number of requests is evaluated.

      unit:
        requests: Requests
        minutes: Minutes

    reverseProxy:
      title: Reverse proxy
      providerPresets: Provider presets
      intro: In case you're using a reverse proxy to serve mosparo, you have to configure these settings so mosparo knows how to detect the client's IP address correctly.

      modifyNotAllowed: These settings are overwritten in the environment file of mosparo. You cannot change any settings here.

      form:
        trustedProxies: List of trusted proxies
        trustedProxiesHelp: Define all trusted proxies. These can be defined as simple IP address or as a subnet of IP addresses. The localhost (127.0.0.1) is always added to the list automatically.
        trustedProxiesIncludeRemoteAddr: Include REMOTE_ADDR in trusted proxies
        trustedProxiesIncludeRemoteAddrHelp: This option will add REMOTE_ADDR to the list of trusted proxies. This can be dangerous since it accepts the Forwarded headers from all possible clients.
        replaceForwardedForHeader: Name of the custom remote address header
        replaceForwardedForHeaderHelp: If required, specify the header's name in which the reverse proxy sends the IP address of the client.
        replaceForwardedProtoHeader: Name of the custom protocol header
        replaceForwardedProtoHeaderHelp: If required, specify the header's name in which the reverse proxy sends the request protocol.

    ipAllowList:
      form:
        ipAllowList: Allowed IP addresses and subnets
        ipAllowListHelp: "Specify one IP address or subnet per line. Example: 192.168.1.13 or 192.168.1.0/24"

    backendAccess:
      title: Backend access
      intro: If you want to protect mosparo from unallowed access from the internet, you can specify which IP addresses are allowed to access the backend. Leave this field empty to allow everybody to access the login form and the backend.
      hintOwnIp: Please note that you can only save this setting if your IP address (%ipAddress%) is also included in the list (as IP address or subnet). If you have an IPv6 address, adding your subnet is recommended.

    apiAccess:
      title: API access
      intro: If you want to protect the mosparo API from unallowed access from the internet, you can specify which IP addresses are allowed to access it. Leave this field empty to allow every client to access the APIs.
      hintFrontendApi: Please note that this limits only the verification and statistic API. The frontend API will always be publicly available.

    webCronJobAccess:
      title: Web cron job access
      intro: If you want to protect the mosparo web cron job from unallowed access from the internet, you can specify which IP addresses are allowed to access it. Leave this field empty to allow every client to access the web cron job.
      hintWebCronJobDisabled: The web cron job is disabled, and you cannot configure access to it as long as it is disabled.

    message:
      savedSuccessfully: The security settings were saved successfully.

  user:
    title: Users
    description: Manage all users of this mosparo instance.
    backToOverview: Back to users
    roles: Roles

    list:
      user: User
      roles: Roles
      actions: Actions

    create:
      title: Create user

    modify:
      title: Modify user %email%

    form:
      email: Email
      password: Password
      isActiveUser: Is active user
      isAdministrator: Is administrator
      canCreateProjects: Can create projects
      sendPasswordResetEmail: Send the user an email to set the password

      message:
        successfullySaved: The user was saved successfully.
        errorCreatingResetToken: 'There was a technical error while creating the email. Error: %errorMessage%'
        errorSendingResetEmail: 'The email with the link could not be sent correctly. Error: %errorMessage%'

    help:
      password: Leave these fields empty if no password change is required.
      canCreateProjects: Allows the user to create new projects. An administrator can always create projects.

    delete:
      title: Delete user %email%
      confirm: Do you really want to delete the user %email%?
      infoCantSelfDelete: You can't delete yourself.

      message:
        successfullyDeleted: The user %email% was deleted successfully.
        errorUserIsOwner: The user is an owner of at least one project. You cannot delete owner of projects.

  cronJobs:
    title: Cron jobs
    description: Configure the cron jobs for mosparo.

    setup:
      title: Setup
      intro: Please configure the following cron jobs to automate the execution of these tasks.

      titles:
        address: Address
        commands: Commands
        example: Example

      web:
        title: Execute cron jobs via web request
        intro: Set up a cron job with the following address to execute it. You can use a local cron job or a remote service.
        infoWgetPath: Please adjust the path to %wgetBinary% accordingly to your operating system if you use a local cron job.

      cli:
        title: Execute cron jobs via CLI
        intro: Set up the following commands as a cronjob to execute the functionality.
        infoAdjustPaths: Please remember to adjust the paths to the PHP binary and the mosparo CLI command. Your hosting provider's documentation usually provides more information about this part.

    settings:
      title: Settings
      intro: Please enable the option below to use the cron jobs via web request.
      enableWebCronJobs: Enable cron job via web request
      webCronJobSecretKey: Secret key for web cron job
      webCronJobSecretKeyHelp: This key protects your web cron job from foreign access. You can use the automatically generated key or enter your own key.
      webCronJobInterval: Minimum waiting time between cron jobs execution
      webCronJobIntervalHelp: Defines the minimum time between cronjob executions. This is mainly a security measure to prevent overloading the server.
      geoIp2RefreshInterval: GeoIP2 refresh interval
      geoIp2RefreshIntervalHelp: Defines the number of days after which an attempt is made to update the GeoIP2 database. To avoid overloading the GeoIP2 server, the database should only be updated infrequently, for example, once a week.

      hintAccess: You can limit access to the web cron job based on the IP address in the %linkStart%security settings%linkEnd%.

      message:
        savedSuccessfully: The settings were saved successfully.

  geoip2:
    title: GeoIP2
    description: Configure the GeoIP2 integration.

    settings:
      title: Settings
      getLicenseKey: "To get a license key, you need a MaxMind account. Please visit the following site:"
      useGeoip2Field: Use the automatic IP address localization
      accountIdField: Account ID
      accountIdHelp: You can find your account ID under "Account Information" in your MaxMind account.
      licenseKeyField: License key
      licenseKeyHelp: To get a license key, log into your MaxMind account and request a new one under "Manage License Keys".

      message:
        savedSuccessfully: The settings were saved successfully.
        infoActivationTime: If you have just requested your license key, it will take some time for the license key to become active.

    version:
      titleAvailable: GeoIP2 available
      messageAvailable: 'The GeoIP2 database has been successfully downloaded and is active. The following versions are active:'
      typeAsn: 'AS number:'
      typeCountry: 'Country:'

      titleNotAvailable: GeoIP2 not available
      messageDatabaseNotAvailable: The GeoIP2 database has not been downloaded yet or an error occurred during download.


    downloadAndUpdate:
      title: Download & automatic update
      intro: After you've saved the license key, mosparo needs to download the database. You can do that here directly or you can use a SSH connection to execute the command.

      web:
        title: Web
        intro: "Use the following button to let mosparo download the database:"
        action: Download the database

        message:
          successfullyDownloaded: The database was downloaded successfully.
          errorDownload: An error occurred while mosparo tried to download the database. %error%
          specifyLicenseKey: Please enter a license key before you try to download the database.

      cli:
        title: CLI
        intro: "Use the following command to download the database via CLI:"

      update:
        title: Automatic update
        intro: "To automatically refresh the database, it is recommend to set up a cronjob which will automatically download the database. To use the automatic update, please set up a cronjob like the following:"
        infoAbsolutePath: You maybe have to adjust the path of the %pathToBinConsole% file. It could be possible that you have to fill in the absolute path.
        infoRateLimit: Please remember that the number of downloads a license key can make is limited. Please do not use the download functionality to often.

  update:
    title: Update
    description: Check for new versions and update your mosparo installation.

    updateChannel: Update channel
    installedVersion: Installed version
    availableVersion: Available version

    button:
      updateAvailable: Update available

    check:
      title: Status
      intro: If you want to check for updates, please click on the button below.

      message:
        errorCheckingForUpdates: 'An error occurred while checking for updates. Error: %errorMessage%'

    version:
      titleAvailable: Update available
      messageAvailable: A new update for mosparo is available. Please click on the install button below if you would like to install the update.
      warningUpdate: Please backup the mosparo files and the database before update. This automatic update process will not backup the files or the database. If something does not work correctly, it can destroy your mosparo installation.
      warningUpdatesDisabled: Updates are disabled for this mosparo installation. Please check the documentation to see other options to update your mosparo installation.
      releaseNotes: Release notes

      titleNotAvailable: No update available
      messageNotAvailable: No new update for mosparo is available. Please check again later.
      lastChecked: 'Last check:'

    upgrade:
      titleAvailable: Upgrade available
      updateFirst: Please update to the latest minor version before upgrading to the next major version.
      introAvailable: A new major version is available. You can use the update tool to upgrade to the latest major version.
      installedVersion: Installed major version
      availableVersion: Available major version

    checkRequirements:
      title: Check requirements
      introduction: Before you upgrade, make sure that you meet all requirements. With a new major version, the requirements can change and must be met before the upgrade can be executed.

      meetPrerequisites: All requirements are met. You can proceed with the upgrade.
      missingPrerequisites: Some requirements are missing. Please check the summary below.

      action:
        upgrade: Upgrade to %newMajorVersion%
        recheck: Recheck

    execute:
      title: Update mosparo
      description: Please wait and don't leave this page. Update progress started…
      log: Process

      message:
        successfullyUpdated: mosparo was successfully updated. Please continue to the dashboard.
        updateError: An error occurred while updating mosparo. Please check the error message below.

    settings:
      title: Update settings

      form:
        channelStable: Stable
        channelBeta: Beta
        channelDevelop: Develop

      message:
        infoDevelopChannel: The develop and beta channels contain untested and unstable versions which are not ready for production use. Please do not use them in a production environment.
        savedSuccessfully: The update channel was saved successfully.

    buttons:
      continue: Continue

    finalize:
      title: Update executed
      description: The needed changes for this update were executed. Your installation is up to date.

      hostsAlert:
        title: 'Version 1.2: Change in origin verification'
        intro: With version 1.2, mosparo starts to verify the origin of a frontend request. Because of this change, the hosts in your project must be set correctly.
        intro2: Please verify your projects and forms now.

      geoIp2Info:
        title: 'Version 1.2.2: MaxMind Account ID required'
        intro: Your MaxMind account ID and license key are required to download the GeoIP2 database.
        intro2: Please check the GeoIP2 configuration and enter your account ID.

  system:
    title: System Information
    description: Find all the information about mosparo.

    general:
      title: General
      mosparoVersion: mosparo version
      serverInfo: Server
      phpVersion: PHP version
      extensions: Extensions

    logo:
      title: Logo
      intro: The logo was designed by Jan Kosa.
      license: The logo is licensed under a %linkStart%Creative Commons Attribution-NoDerivatives 4.0 International License%linkEnd%.

    license:
      title: License mosparo

    projectMembers:
      title: Project members
      intro: These persons made mosparo what it is - an installed software on your web hosting.

    usedLibrariesAndResources:
      title: Used libraries and resources
      intro: We would like to thank all open source developer for their incredible work.
      frontend: Frontend / Visual
      backend: Backend / PHP Libraries
      license: License

    website: Website

  cleanupStatistic:
    title: Cleanup statistic
    description: Check when the submit tokens and submissions were cleared from the database.

    list:
      dateTime: Date and time
      cleanupExecutor: Executor
      submitTokens: Submit tokens
      submissions: Submission
      executionTime: Execution time
      cleanupStatus: Status

# Download check
downloadCheck:
  cardTitle: Internet connection
  intro: An outgoing internet connection is not a requirement for mosparo. If an internet connection is available, mosparo automatically checks for updates by loading the version file from the mosparo website. You also need an active internet connection to download updates, the GeoIP2 databases, and rule packages.
  downloadIsPossible: The PHP settings allow downloads of rule packages and updates. No adjustment is required.
  downloadIsNotPossible: The PHP settings do not allow the download of updates or rule packages. If you want to use the rule packages or update functionality, please adjust your PHP configuration accordingly.
  curlIsEnabledButFunctionsAreDisabled: The extension %extensionName% is enabled, but the required functions (%functionNames%) are disabled. We recommend disabling the extension in general or enabling the needed functions.
  moreInformation: More information

# Account
account:
  title: Account
  backToOverview: Back to overview

  settings:
    title: User settings
    description: Change the general settings for your account.

    form:
      locale: Language
      dateFormat: Date format
      timeFormat: Time format
      timezone: Timezone
      colorMode: Color mode

    message:
      successfullySaved: Your settings were saved successfully.

  changePassword:
    title: Change password
    description: Change the password of your account.

    form:
      oldPassword: Old password

    message:
      successfullyChanged: Your password was successfully changed.

  twoFactor:
    title: Two factor authentication
    description: Configure the two factor authentication for your account.

    action:
      configure: Configure
      reconfigure: Reconfigure
      resetBackupCodes: Reset backup codes
      disable: Disable
      continue: Continue
      verify: Verify

    status:
      intro: Your account is protected with two factor authentication.

    start:
      title: Set up two factor authentication
      intro: Please scan this QR code with your authentication app on your smartphone. You can use Google Authenticator, Microsoft Authenticator or similar apps.
      textManually: Instead of scanning the QR code, you can enter the following code manually into the authentication app.
      qrCodeAlt: This image shows the QR code, which you have to scane with your authentication app on your smartphone.

    verify:
      title: Verify two factor authentication
      intro: Please enter the code which is visible in the authentication app in the field below and verify the set up.

    backupCodes:
      title: Backup codes
      intro: Please save these codes in a safe place. If you've lost access to your device you can login with these backup codes.
      infoResetBackupCodes: You can use every backup code only once. You should reset the backup codes, as soon as you had to use one.

    message:
      successfullyDisabled: Two factor authentication was successfully disabled for your account.

    error:
      verificationFailed: The verification of the two factor authentication failed. Please repeat the process.


# Security
security:
  login:
    title: Login
    youAreLoggedIn: You are logged in as %username%.
    emailLabel: Email address
    passwordLabel: Password

  logout:
    title: Logout

  forgotPassword:
    title: Forgot password

  twoFactor:
    title: Two factor authentication
    intro: Please enter the code from your two factor authentication app.

  noAccess:
    title: No access

  notFound:
    title: Not found

# Password reset
password:
  backToLogin: Back to login

  request:
    title: Reset your password
    intro: Enter your email address and we will send you a link to reset your password.
    action: Send password reset email

    form:
      email: Email

    message:
      failedToSendEmail: 'Due to a technical error, the email could not be sent. Please try again later. Error message: %errorMessage%'

  email:
    subject: Your password reset request
    greeting: Hi!
    infoClickButton: To reset your password, click on the button below and follow the instructions.
    resetPasswordButton: Reset password
    infoLinkExpiration: This link will expire in %time%.
    goodbye: Thanks,
    help: If you’re having trouble with the button above, copy and paste the URL below into your web browser.

  emailSent:
    title: Password reset email sent
    infoEmailWithLink: If an account matching your email exists, then an email was just sent that contains a link that you can use to reset your password. This link will expire in %time%.
    infoSpamFolder: If you don't receive an email please check your spam folder or %linkStart%try again%linkEnd%.

  reset:
    title: Reset your password
    action: Reset password

    message:
      successfullyReset: Your password was reset successfully.

    error:
      tokenNotFound: No reset password token found in the URL or in the session.
      errorOccurred: There was a problem validating your reset request. %error%

  form:
    password: Password
    newPassword: New password
    repeatPassword: Repeat password

# General actions
action:
  add: Add
  remove: Remove
  save: Save
  saveAndContinue: Save and continue
  skipWizard: Skip wizard
  view: View
  edit: Edit
  delete: Delete
  actions: Actions
  help: Help
  learnMore: Learn more
  close: Close
  manage: Manage
  use: Use
  configure: Configure
  test: Test
  checkForUpdate: Check for update
  installUpdate: Install update
  goToTheDashboard: Go to the dashboard
  checkRequirements: Check requirements
  export: Export
  importProject: Import project
  simulateImport: Simulate import
  executeChanges: Execute changes
  moreInformation: More information
  howToImport: How to import

# General values
general:
  infoUndo: You cannot undo this process.
  example: Example
  empty: Empty
  unlimited: Unlimited

# State
state:
  active: Active
  inactive: Inactive
  ignored: Ignored
  yes: Yes
  no: No

# Roles
roles:
  administrator: Administrator
  user: User
  inactive: Inactive

form:
  addMultipleItems: Add multiple items
  choices:
    systemDefault: Default setting
    browserLanguage: Browser language
  clearField: Clear field

interface:
  colorModes:
    light: Light
    dark: Dark

# Datatables
datatable:
  datatable:
    processing: "Processing…"
    search: "Search:"
    lengthMenu: Show _MENU_ entries
    info: Showing _START_ to _END_ of _TOTAL_ entries
    infoEmpty: Showing 0 to 0 of 0 entries
    infoFiltered: (filtered from _MAX_ total entries)
    loadingRecords: Loading…
    zeroRecords: No matching records found
    emptyTable: No data available in table
    searchPlaceholder: Search
    paginate:
      first: First
      previous: Previous
      next: Next
      last: Last
    aria:
      sortAscending: ": activate to sort column ascending"
      sortDescending: ": activate to sort column descending"

# Setup
setup:
  buttons:
    continue: Continue
    install: Install
    recheck: Recheck
    goToLogin: Go to login

  start:
    title: Setup
    introduction: This setup will guide you throught the mosparo setup process.

  prerequisites:
    title: Requirements
    introduction: mosparo has some requirements to be able to run correctly. Before we can set up mosparo, these requirements have to be met.

    meetPrerequisites: All requirements are met. You can proceed with the setup.
    missingPrerequisites: Some requirements are missing. Please check the summary below.
    installOptionalExtensions: Some optional extensions are not installed. We recommend you to install these extensions before you proceed.

    types:
      general: General
      phpExtension: PHP extensions
      internetConnection: Internet connection
      writeAccess: Write access

    subtypes:
      minPhpVersion: Minimum PHP version

    results:
      available: Available
      missing: Missing
      okay: Okay
      notOkay: Not okay
      writable: Writable
      notWritable: Not writable

      minPhpVersion:
        required: 'Required:'
        available: 'Available:'

    optional: optional

  database:
    title: Database
    introduction: Please choose the database system and configure your database connection.
    useEmptyDatabase: Please use an empty database or a database in which no tables of mosparo exist.
    mosparoTablesExistInDatabase: Tables of mosparo were found in the specified database. Please use another database or delete the tables.
    connectionDataInvalid: It was not possible to connect to the database. Please check your settings below and try again.
    sqliteVersionMismatch: mosparo requires at least SQLite library 3.16.0, but you have version %versionNumber% installed. You cannot use SQLite to install mosparo.
    mysqlEncryption: To set up an encrypted connection to your MySQL server, you can define the necessary information using the environment variables. Please see our documentation for more details.

    form:
      system: System
      host: Host
      port: Port
      database: Database
      user: User
      password: Password

    system:
      pleaseChoose: Please choose…
      mysql: MySQL/MariaDB
      postgres: PostgreSQL
      sqlite: SQLite

    port:
      default: Default

  other:
    title: Other information
    introduction: We have some other values we need. Please fill out the fields below.

    form:
      name: Name of mosparo
      subtitleCreateYourUser: Create your user
      emailAddress: Email address
      password: Password

  install:
    title: Installation completed
    description: The installation was successfully completed. You can now login with your user.

dataTable:
  name: Name
  value: Value
  empty: Empty

dateRange:
  14d: 14 Days
  1m: 1 Month
  2m: 2 Months
  3m: 3 Months
  6m: 6 Months
  1y: 1 Year
  2y: 2 Years
  forever: Forever

unit:
  day: Day
  days: Days
  minutes: Minutes
  second: Second
  seconds: Seconds
  secondsShort: Sec
  hashesPerSecondShort: Hashes/Sec
  submission: Submission
  submissions: Submissions

unitHelp:
  inSeconds: In seconds

languageSource:
  browserFallback:
    label: Use browser language
    help: Use the browser language for the mosparo frontend box. If mosparo has no translations for this language, fall back to English.

  browserHtmlFallback:
    label: Use browser language, fallback to website language
    help: Use the browser language for the mosparo frontend box. If mosparo has no translations for this language, use the website's language. If this language is unavailable too, fall back to English.

  htmlBrowserFallback:
    label: Use website language, fallback to browser language
    help: Use the website's language for the mosparo frontend box. If mosparo has no translations for this language, use the browser's language. If this language is unavailable too, fall back to English.

cleanup:
  lastDatabaseCleanup: 'Last database cleanup:'

cleanupStatus:
  unknown:
    label: Unknown

  incomplete:
    label: Incomplete

  complete:
    label: Complete

cleanupExecutor:
  unknown:
    label: Unknown

  cleanupCommand:
    label: Cleanup command

  frontendApi:
    label: Frontend API

  webCronJob:
    label: Web cron job

rulePackageType:
  category:
    automatically:
      label: Automatically
      description: If you want mosparo to automatically import the rule package, use one of the following types.

    manually:
      label: Manually
      description: Use one of the manual types if you want to import the rule package manually or execute the import with a cron job.

  automaticallyFromUrl:
    label: Automatically from URL
    description: mosparo automatically loads the rule package from the URL over the internet connection.

  automaticallyFromFile:
    label: Automatically from file
    description: mosparo automatically loads the rule package from the specified file path on your server.

  manuallyViaCli:
    label: Manually via CLI
    description: Execute the CLI command to import the rule package manually when you change it.

  manuallyViaApi:
    label: Manually via API
    description: Import the rule package with your tools or mosparo RPG over mosparo's API.

unknown:
  label: Unknown

example:
  titleSingular: Example
  titlePlural: Examples

argument:
  titleSingular: Argument
  titlePlural: Arguments

tooltip:
  projectId: Project ID
  rulePackageId: Rule package ID
  file: File path
  input: Use standard input
  hash: SHA256 hash
  host: Host
  publicKey: Public key
  privateKey: Private key